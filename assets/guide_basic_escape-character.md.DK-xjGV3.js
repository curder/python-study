import{_ as t,c as a,o as e,a2 as i}from"./chunks/framework.Ck3lBW6i.js";const g=JSON.parse('{"title":"转义字符","description":"","frontmatter":{},"headers":[],"relativePath":"guide/basic/escape-character.md","filePath":"guide/basic/escape-character.md","lastUpdated":1657684429000}'),s={name:"guide/basic/escape-character.md"},d=i(`<h1 id="转义字符" tabindex="-1">转义字符 <a class="header-anchor" href="#转义字符" aria-label="Permalink to &quot;转义字符&quot;">​</a></h1><h2 id="无法直接表示的字符" tabindex="-1">无法直接表示的字符 <a class="header-anchor" href="#无法直接表示的字符" aria-label="Permalink to &quot;无法直接表示的字符&quot;">​</a></h2><table tabindex="0"><thead><tr><th>转义字符</th><th>表达的字符</th><th>备注</th></tr></thead><tbody><tr><td><code>\\n</code></td><td>换行</td><td>newline 光标移动到下一行的开头处</td></tr><tr><td><code>\\t</code></td><td>水平制表符</td><td>tab 光标移动到下一组4个空格的开头处</td></tr><tr><td><code>\\r</code></td><td>回车</td><td>return 光标移动到本行的开头</td></tr><tr><td><code>\\b</code></td><td>退格</td><td>backspace 回退一个字符</td></tr></tbody></table><h2 id="字符串中特殊用途字符" tabindex="-1">字符串中特殊用途字符 <a class="header-anchor" href="#字符串中特殊用途字符" aria-label="Permalink to &quot;字符串中特殊用途字符&quot;">​</a></h2><table tabindex="0"><thead><tr><th>转义字符</th><th>表达的字符</th></tr></thead><tbody><tr><td><code>\\\\</code></td><td>反斜杠</td></tr><tr><td><code>\\&#39;</code></td><td>单引号</td></tr><tr><td><code>\\&quot;</code></td><td>双引号</td></tr></tbody></table><h2 id="原字符" tabindex="-1">原字符 <a class="header-anchor" href="#原字符" aria-label="Permalink to &quot;原字符&quot;">​</a></h2><p>使转义字符不起作用，写在字符串前面，用 <code>r</code> 或 <code>R</code>。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">Hello</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> world</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Hello\\n world</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello\\n world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Hello\\n world</span></span></code></pre></div>`,8),h=[d];function r(n,l,o,c,p,k){return e(),a("div",null,h)}const u=t(s,[["render",r]]);export{g as __pageData,u as default};
