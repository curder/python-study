import{_ as i,c as s,o as a,a2 as t}from"./chunks/framework.Ck3lBW6i.js";const c=JSON.parse('{"title":"列表","description":"","frontmatter":{},"headers":[],"relativePath":"guide/list/index.md","filePath":"guide/list/index.md","lastUpdated":1657706197000}'),h={name:"guide/list/index.md"},l=t('<h1 id="列表" tabindex="-1">列表 <a class="header-anchor" href="#列表" aria-label="Permalink to &quot;列表&quot;">​</a></h1><p>列表是可变的，同时列表的元素是可以重复的，也是有序的，使用 <code>[]</code> 符号定义。</p><h2 id="为什么需要列表" tabindex="-1">为什么需要列表 <a class="header-anchor" href="#为什么需要列表" aria-label="Permalink to &quot;为什么需要列表&quot;">​</a></h2><p>普通变量可以存储一个元素，而列表是一个&quot;大容器&quot;可以存储N个元素，程序可以方便的对这些数据进行整体操作。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ]))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [1, True, &#39;hello&#39;, &#39;world&#39;, False, 0.1]</span></span></code></pre></div><h2 id="列表的特点" tabindex="-1">列表的特点 <a class="header-anchor" href="#列表的特点" aria-label="Permalink to &quot;列表的特点&quot;">​</a></h2><ol><li>列表元素按顺序有序排序</li><li>索引映射唯一个数据</li><li>列表可以存储重复数据</li><li>任意数据类型混存</li><li>根据需要动态分配和回收内存</li></ol><h2 id="获取列表长度" tabindex="-1">获取列表长度 <a class="header-anchor" href="#获取列表长度" aria-label="Permalink to &quot;获取列表长度&quot;">​</a></h2><p>跟获取字符串长度一样，可以使用 <code>len()</code> 函数获取列表的长度</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ]))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 6</span></span></code></pre></div>',10),e=[l];function n(k,p,d,r,o,E){return a(),s("div",null,e)}const y=i(h,[["render",n]]);export{c as __pageData,y as default};
